// Generated by CoffeeScript 1.6.3
(function() {
  var chatModule;

  chatModule = angular.module("chat", []);

  chatModule.config(function($routeProvider) {
    return $routeProvider.when('/chatWith/:name', {
      templateUrl: 'chat_with.html',
      controller: 'ChatCtrl'
    }).when('/', {
      templateUrl: 'chat_hall.html',
      controller: 'ChatHallCtrl'
    });
  });

  chatModule.service('chatData', function() {
    return {
      currentUser: null,
      totalMsgs: [],
      setCurrentUser: function(user) {
        return this.currentUser = user;
      },
      sendMsg: function(msg) {
        var pair;
        pair = _.find(this.totalMsgs, function(pair) {
          return pair.partner === msg.receiver;
        });
        if (pair) {
          return pair.groupMsgs.push(msg);
        } else {
          pair = {
            partner: msg.receiver,
            groupMsgs: []
          };
          pair.groupMsgs.push(msg);
          return this.totalMsgs.push(pair);
        }
      },
      receiveMsg: function(msg) {}
    };
  });

  chatModule.controller('ChatHallCtrl', function($scope, chatData) {
    $scope.connectedChatters = [];
    $scope.joined = false;
    $scope.connectedChatters.push('Tester');
    $scope.connectedChatters.push('Anny');
    return $scope.join = function() {
      $scope.joined = true;
      return chatData.setCurrentUser({
        name: $scope.username
      });
    };
  });

  chatModule.controller('ChatCtrl', function($scope, $routeParams, chatData) {
    $scope.partner = {
      name: $routeParams.name || 'None'
    };
    $scope.currentUser = chatData.currentUser;
    $scope.getMsgs = function() {
      return $scope.msgs = _.find(chatData.totalMsgs, function(msg) {
        return msg.partner === $scope.partner;
      });
    };
    return $scope.send = function() {
      var msg;
      msg = {
        sender: $scope.currentUser,
        receiver: $scope.partner,
        content: $scope.msgContent
      };
      chatData.sendMsg(msg);
      return $scope.getMsgs();
    };
  });

}).call(this);
