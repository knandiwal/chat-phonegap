// Generated by CoffeeScript 1.6.3
(function() {
  var chatModule;

  chatModule = angular.module("chat", []);

  chatModule.config(function($routeProvider) {
    return $routeProvider.when('/chatWith/:name', {
      templateUrl: 'chat_with.html',
      controller: 'ChatCtrl'
    }).when('/', {
      templateUrl: 'chat_hall.html',
      controller: 'ChatHallCtrl'
    });
  });

  chatModule.service('chatData', function() {
    return {
      currentUser: null,
      currentSocket: null,
      totalMsgs: [],
      setCurrentUser: function(user) {
        return this.currentUser = user;
      },
      sendMsg: function(msg) {
        var pair;
        pair = _.find(this.totalMsgs, function(group) {
          return _.isEqual(group.partner, msg.receiver);
        });
        if (pair) {
          return pair.groupMsgs.push(msg);
        } else {
          pair = {
            partner: msg.receiver,
            groupMsgs: []
          };
          pair.groupMsgs.push(msg);
          return this.totalMsgs.push(pair);
        }
      },
      receiveMsg: function(msg) {
        var pair;
        pair = _.find(this.totalMsgs, function(group) {
          return _.isEqual(group.partner, msg.sender);
        });
        if (pair) {
          return pair.groupMsgs.push(msg);
        } else {
          pair = {
            partner: msg.sender,
            groupMsgs: []
          };
          pair.groupMsgs.push(msg);
          return this.totalMsgs.push(pair);
        }
      }
    };
  });

  chatModule.controller('ChatHallCtrl', function($scope, chatData) {
    $scope.connectedChatters = [];
    $scope.joined = false;
    $scope.connectedChatters.push('Tester');
    $scope.connectedChatters.push('Anny');
    return $scope.join = function() {
      var socket;
      socket = io.connect("http://localhost:3333");
      socket.on('init_chatters', function(chatters) {
        $scope.connectedChatters = _.reject(chatters, function(cr) {
          return cr === $scope.username;
        });
        $scope.joined = true;
        return $scope.$apply();
      });
      socket.on('chatters', function(chatters) {
        $scope.connectedChatters = _.reject(chatters, function(cr) {
          return cr === $scope.username;
        });
        return $scope.$apply();
      });
      socket.on('receive p2p msg', function(msg) {
        var e;
        chatData.receiveMsg(msg);
        e = angular.element(document.querySelector("#" + msg.receiver.name + "-to-" + msg.sender.name));
        if (e) {
          e.scope().getMsgs();
          return e.scope().$apply();
        }
      });
      socket.emit('join', $scope.username);
      chatData.currentSocket = socket;
      return chatData.setCurrentUser({
        name: $scope.username
      });
    };
  });

  chatModule.controller('ChatCtrl', function($scope, $routeParams, chatData) {
    $scope.partner = {
      name: $routeParams.name || 'None'
    };
    $scope.currentUser = chatData.currentUser;
    $scope.getMsgs = function() {
      return $scope.msgs = _.find(chatData.totalMsgs, function(msg) {
        return _.isEqual(msg.partner, $scope.partner);
      });
    };
    $scope.getMsgs();
    return $scope.send = function() {
      var msg;
      msg = {
        sender: $scope.currentUser,
        receiver: $scope.partner,
        content: $scope.msgContent
      };
      chatData.sendMsg(msg);
      $scope.getMsgs();
      return chatData.currentSocket.emit('p2p msg', msg);
    };
  });

}).call(this);
